---
description:
globs:
alwaysApply: false
---
# 3. Multi-resolution, multi-target model

## 3.1 MultiresMultiTarget wrapper (torch nn.Module)

```scss
┌───────────────────────────────┐
│ Daily Backbone  (NHITS)       │  → 3×Q quantiles for D+1…D+90
└───────────────────────────────┘
                    │ daily_preds (stop-grad)
                    ▼
┌───────────────────────────────┐
│ Hourly Backbone (PatchTST)    │  ← daily_preds as exogenous series
└───────────────────────────────┘
                    │
                    ▼
        joint QuantileLoss (+ λ·HierarchicalConsistencyLoss)
```

Each backbone lives in `modelling/backbones/` and can be swapped via YAML (e.g., `model.backbone=nhits`). Potential files include:
*   [tft.py](mdc:forecast_cli/modelling/backbones/tft.py)
*   [nhits.py](mdc:forecast_cli/modelling/backbones/nhits.py)
*   [nbeatsx.py](mdc:forecast_cli/modelling/backbones/nbeatsx.py)
*   [patchtst.py](mdc:forecast_cli/modelling/backbones/patchtst.py)

The wrapper [multitarget_wrapper.py](mdc:forecast_cli/modelling/wrappers/multitarget_wrapper.py) broadcast-indexes the three targets: `booking_revenue_cents`, `players`, `booking_count`.

`HierarchicalConsistencyLoss` forces `sum(hourly_pred) ≈ daily_pred` during training.

## 3.2 Loss

```python
total_loss = Σ_target w_t * (Qloss_daily + Qloss_hourly)
           + λ_hier * HCLoss
where w_t are user-configurable per-target weights (default uniform) and
HCLoss(actual, pred) = MAE(sum_hourly - daily).
```
